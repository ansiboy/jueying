{"version":3,"sources":["webpack:///./lib/jquery.event.drag-2.2.js","webpack:///./lib/jquery.event.drag.live-2.2.js","webpack:///./lib/jquery.event.drop-2.2.js","webpack:///./lib/jquery.event.drop.live-2.2.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;;AAEA;AACA,sB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,oD;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;AACA;AACA;AACA,oD;AACA,EAAE;;AAEF;AACA,yB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,U;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,4B;AACA;AACA,sB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,6BAA6B;AAC7B,0CAA0C;AAC1C;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,YAAY;AACZ;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE;AACvE;AACA,kEAAkE;AAClE;AACA;AACA,yCAAyC;AACzC,yCAAyC;AACzC;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,6CAA6C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,cAAc;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,E;AACJ;AACA,gD;AACA;AACA;AACA;AACA;AACA;AACA,sB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,uC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2C;AACA;AACA;AACA;AACA;AACA,a;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA,8B;AACA;AACA;AACA;AACA,8C;AACA,EAAE;;AAEF;AACA,uB;AACA,e;AACA,EAAE;;AAEF;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,Y;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA,CAAC,Y;;;;;;;;;;;ACjZD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yB;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,EAAE;AACF;;AAEA,CAAC,Y;;;;;;;;;;;ACtFD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,aAAa;;AAEd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sB;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,c;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,sB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0D;AACA,iC;AACA,GAAG;AACH,EAAE;;AAEF;AACA,gC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kD;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,yB;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,+C;AACA,kD;AACA;AACA;;AAEA;AACA,EAAE;;AAEF;AACA,iC;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,c;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA,oCAAoC,YAAY,WAAW,yBAAyB;AACpF;AACA,6F;AACA,EAAE;;AAEF;AACA,SAAS;AACT;AACA;AACA;AACA,sDAAsD;AACtD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA,EAAE;;AAEF;AACA,0B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,W;AACA;AACA;AACA;AACA,Y;AACA;AACA;AACA;AACA,kC;AACA;AACA;AACA;AACA,oC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;AACA,qB;AACA,IAAI,qBAAqB;AACzB;AACA,yB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qE;AACA;AACA;AACA;AACA,IAAI,qBAAqB;AACzB,GAAG;AACH;AACA;AACA,qBAAqB;AACrB;AACA,sC;AACA,wB;AACA,IAAI;AACJ;AACA,yB;AACA;;AAEA;;AAEA;AACA;;AAEA,CAAC,UAAU,kB;;;;;;;;;;;AC7SX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,aAAa;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wB;AACA,IAAI,E;AACJ,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,6C;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;;AAEA,CAAC,YAAY,kB","file":"0.index.es5.js","sourcesContent":["/*! \r\n * jquery.event.drag - v 2.2\r\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\r\n * Open Source MIT License - http://threedubmedia.com/code/license\r\n */\r\n// Created: 2008-06-04 \r\n// Updated: 2012-05-21\r\n// REQUIRES: jquery 1.7.x\r\n\r\n;(function( $ ){\r\n\r\n// add the jquery instance method\r\n$.fn.drag = function( str, arg, opts ){\r\n\t// figure out the event type\r\n\tvar type = typeof str == \"string\" ? str : \"\",\r\n\t// figure out the event handler...\r\n\tfn = $.isFunction( str ) ? str : $.isFunction( arg ) ? arg : null;\r\n\t// fix the event type\r\n\tif ( type.indexOf(\"drag\") !== 0 ) \r\n\t\ttype = \"drag\"+ type;\r\n\t// were options passed\r\n\topts = ( str == fn ? arg : opts ) || {};\r\n\t// trigger or bind event handler\r\n\treturn fn ? this.bind( type, opts, fn ) : this.trigger( type );\r\n};\r\n\r\n// local refs (increase compression)\r\nvar $event = $.event, \r\n$special = $event.special,\r\n// configure the drag special event \r\ndrag = $special.drag = {\r\n\t\r\n\t// these are the default settings\r\n\tdefaults: {\r\n\t\twhich: 1, // mouse button pressed to start drag sequence\r\n\t\tdistance: 0, // distance dragged before dragstart\r\n\t\tnot: ':input', // selector to suppress dragging on target elements\r\n\t\thandle: null, // selector to match handle target elements\r\n\t\trelative: false, // true to use \"position\", false to use \"offset\"\r\n\t\tdrop: true, // false to suppress drop events, true or selector to allow\r\n\t\tclick: false // false to suppress click events after dragend (no proxy)\r\n\t},\r\n\t\r\n\t// the key name for stored drag data\r\n\tdatakey: \"dragdata\",\r\n\t\r\n\t// prevent bubbling for better performance\r\n\tnoBubble: true,\r\n\t\r\n\t// count bound related events\r\n\tadd: function( obj ){ \r\n\t\t// read the interaction data\r\n\t\tvar data = $.data( this, drag.datakey ),\r\n\t\t// read any passed options \r\n\t\topts = obj.data || {};\r\n\t\t// count another realted event\r\n\t\tdata.related += 1;\r\n\t\t// extend data options bound with this event\r\n\t\t// don't iterate \"opts\" in case it is a node \r\n\t\t$.each( drag.defaults, function( key, def ){\r\n\t\t\tif ( opts[ key ] !== undefined )\r\n\t\t\t\tdata[ key ] = opts[ key ];\r\n\t\t});\r\n\t},\r\n\t\r\n\t// forget unbound related events\r\n\tremove: function(){\r\n\t\t$.data( this, drag.datakey ).related -= 1;\r\n\t},\r\n\t\r\n\t// configure interaction, capture settings\r\n\tsetup: function(){\r\n\t\t// check for related events\r\n\t\tif ( $.data( this, drag.datakey ) ) \r\n\t\t\treturn;\r\n\t\t// initialize the drag data with copied defaults\r\n\t\tvar data = $.extend({ related:0 }, drag.defaults );\r\n\t\t// store the interaction data\r\n\t\t$.data( this, drag.datakey, data );\r\n\t\t// bind the mousedown event, which starts drag interactions\r\n\t\t$event.add( this, \"touchstart mousedown\", drag.init, data );\r\n\t\t// prevent image dragging in IE...\r\n\t\tif ( this.attachEvent ) \r\n\t\t\tthis.attachEvent(\"ondragstart\", drag.dontstart ); \r\n\t},\r\n\t\r\n\t// destroy configured interaction\r\n\tteardown: function(){\r\n\t\tvar data = $.data( this, drag.datakey ) || {};\r\n\t\t// check for related events\r\n\t\tif ( data.related ) \r\n\t\t\treturn;\r\n\t\t// remove the stored data\r\n\t\t$.removeData( this, drag.datakey );\r\n\t\t// remove the mousedown event\r\n\t\t$event.remove( this, \"touchstart mousedown\", drag.init );\r\n\t\t// enable text selection\r\n\t\tdrag.textselect( true ); \r\n\t\t// un-prevent image dragging in IE...\r\n\t\tif ( this.detachEvent ) \r\n\t\t\tthis.detachEvent(\"ondragstart\", drag.dontstart ); \r\n\t},\r\n\t\t\r\n\t// initialize the interaction\r\n\tinit: function( event ){ \r\n\t\t// sorry, only one touch at a time\r\n\t\tif ( drag.touched ) \r\n\t\t\treturn;\r\n\t\t// the drag/drop interaction data\r\n\t\tvar dd = event.data, results;\r\n\t\t// check the which directive\r\n\t\tif ( event.which != 0 && dd.which > 0 && event.which != dd.which ) \r\n\t\t\treturn; \r\n\t\t// check for suppressed selector\r\n\t\tif ( $( event.target ).is( dd.not ) ) \r\n\t\t\treturn;\r\n\t\t// check for handle selector\r\n\t\tif ( dd.handle && !$( event.target ).closest( dd.handle, event.currentTarget ).length ) \r\n\t\t\treturn;\r\n\r\n\t\tdrag.touched = event.type == 'touchstart' ? this : null;\r\n\t\tdd.propagates = 1;\r\n\t\tdd.mousedown = this;\r\n\t\tdd.interactions = [ drag.interaction( this, dd ) ];\r\n\t\tdd.target = event.target;\r\n\t\tdd.pageX = event.pageX;\r\n\t\tdd.pageY = event.pageY;\r\n\t\tdd.dragging = null;\r\n\t\t// handle draginit event... \r\n\t\tresults = drag.hijack( event, \"draginit\", dd );\r\n\t\t// early cancel\r\n\t\tif ( !dd.propagates )\r\n\t\t\treturn;\r\n\t\t// flatten the result set\r\n\t\tresults = drag.flatten( results );\r\n\t\t// insert new interaction elements\r\n\t\tif ( results && results.length ){\r\n\t\t\tdd.interactions = [];\r\n\t\t\t$.each( results, function(){\r\n\t\t\t\tdd.interactions.push( drag.interaction( this, dd ) );\r\n\t\t\t});\r\n\t\t}\r\n\t\t// remember how many interactions are propagating\r\n\t\tdd.propagates = dd.interactions.length;\r\n\t\t// locate and init the drop targets\r\n\t\tif ( dd.drop !== false && $special.drop ) \r\n\t\t\t$special.drop.handler( event, dd );\r\n\t\t// disable text selection\r\n\t\tdrag.textselect( false ); \r\n\t\t// bind additional events...\r\n\t\tif ( drag.touched )\r\n\t\t\t$event.add( drag.touched, \"touchmove touchend\", drag.handler, dd );\r\n\t\telse \r\n\t\t\t$event.add( document, \"mousemove mouseup\", drag.handler, dd );\r\n\t\t// helps prevent text selection or scrolling\r\n\t\tif ( !drag.touched || dd.live )\r\n\t\t\treturn false;\r\n\t},\t\r\n\t\r\n\t// returns an interaction object\r\n\tinteraction: function( elem, dd ){\r\n\t\tvar offset = $( elem )[ dd.relative ? \"position\" : \"offset\" ]() || { top:0, left:0 };\r\n\t\treturn {\r\n\t\t\tdrag: elem, \r\n\t\t\tcallback: new drag.callback(), \r\n\t\t\tdroppable: [],\r\n\t\t\toffset: offset\r\n\t\t};\r\n\t},\r\n\t\r\n\t// handle drag-releatd DOM events\r\n\thandler: function( event ){ \r\n\t\t// read the data before hijacking anything\r\n\t\tvar dd = event.data;\t\r\n\t\t// handle various events\r\n\t\tswitch ( event.type ){\r\n\t\t\t// mousemove, check distance, start dragging\r\n\t\t\tcase !dd.dragging && 'touchmove': \r\n\t\t\t\tevent.preventDefault();\r\n\t\t\tcase !dd.dragging && 'mousemove':\r\n\t\t\t\t//  drag tolerance, x� + y� = distance�\r\n\t\t\t\tif ( Math.pow(  event.pageX-dd.pageX, 2 ) + Math.pow(  event.pageY-dd.pageY, 2 ) < Math.pow( dd.distance, 2 ) ) \r\n\t\t\t\t\tbreak; // distance tolerance not reached\r\n\t\t\t\tevent.target = dd.target; // force target from \"mousedown\" event (fix distance issue)\r\n\t\t\t\tdrag.hijack( event, \"dragstart\", dd ); // trigger \"dragstart\"\r\n\t\t\t\tif ( dd.propagates ) // \"dragstart\" not rejected\r\n\t\t\t\t\tdd.dragging = true; // activate interaction\r\n\t\t\t// mousemove, dragging\r\n\t\t\tcase 'touchmove':\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\tcase 'mousemove':\r\n\t\t\t\tif ( dd.dragging ){\r\n\t\t\t\t\t// trigger \"drag\"\t\t\r\n\t\t\t\t\tdrag.hijack( event, \"drag\", dd );\r\n\t\t\t\t\tif ( dd.propagates ){\r\n\t\t\t\t\t\t// manage drop events\r\n\t\t\t\t\t\tif ( dd.drop !== false && $special.drop )\r\n\t\t\t\t\t\t\t$special.drop.handler( event, dd ); // \"dropstart\", \"dropend\"\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak; // \"drag\" not rejected, stop\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tevent.type = \"mouseup\"; // helps \"drop\" handler behave\r\n\t\t\t\t}\r\n\t\t\t// mouseup, stop dragging\r\n\t\t\tcase 'touchend': \r\n\t\t\tcase 'mouseup': \r\n\t\t\tdefault:\r\n\t\t\t\tif ( drag.touched )\r\n\t\t\t\t\t$event.remove( drag.touched, \"touchmove touchend\", drag.handler ); // remove touch events\r\n\t\t\t\telse \r\n\t\t\t\t\t$event.remove( document, \"mousemove mouseup\", drag.handler ); // remove page events\t\r\n\t\t\t\tif ( dd.dragging ){\r\n\t\t\t\t\tif ( dd.drop !== false && $special.drop )\r\n\t\t\t\t\t\t$special.drop.handler( event, dd ); // \"drop\"\r\n\t\t\t\t\tdrag.hijack( event, \"dragend\", dd ); // trigger \"dragend\"\t\r\n\t\t\t\t}\r\n\t\t\t\tdrag.textselect( true ); // enable text selection\r\n\t\t\t\t// if suppressing click events...\r\n\t\t\t\tif ( dd.click === false && dd.dragging )\r\n\t\t\t\t\t$.data( dd.mousedown, \"suppress.click\", new Date().getTime() + 5 );\r\n\t\t\t\tdd.dragging = drag.touched = false; // deactivate element\t\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t},\r\n\t\t\r\n\t// re-use event object for custom events\r\n\thijack: function( event, type, dd, x, elem ){\r\n\t\t// not configured\r\n\t\tif ( !dd ) \r\n\t\t\treturn;\r\n\t\t// remember the original event and type\r\n\t\tvar orig = { event:event.originalEvent, type:event.type },\r\n\t\t// is the event drag related or drog related?\r\n\t\tmode = type.indexOf(\"drop\") ? \"drag\" : \"drop\",\r\n\t\t// iteration vars\r\n\t\tresult, i = x || 0, ia, $elems, callback,\r\n\t\tlen = !isNaN( x ) ? x : dd.interactions.length;\r\n\t\t// modify the event type\r\n\t\tevent.type = type;\r\n\t\t// remove the original event\r\n\t\tevent.originalEvent = null;\r\n\t\t// initialize the results\r\n\t\tdd.results = [];\r\n\t\t// handle each interacted element\r\n\t\tdo if ( ia = dd.interactions[ i ] ){\r\n\t\t\t// validate the interaction\r\n\t\t\tif ( type !== \"dragend\" && ia.cancelled )\r\n\t\t\t\tcontinue;\r\n\t\t\t// set the dragdrop properties on the event object\r\n\t\t\tcallback = drag.properties( event, dd, ia );\r\n\t\t\t// prepare for more results\r\n\t\t\tia.results = [];\r\n\t\t\t// handle each element\r\n\t\t\t$( elem || ia[ mode ] || dd.droppable ).each(function( p, subject ){\r\n\t\t\t\t// identify drag or drop targets individually\r\n\t\t\t\tcallback.target = subject;\r\n\t\t\t\t// force propagtion of the custom event\r\n\t\t\t\tevent.isPropagationStopped = function(){ return false; };\r\n\t\t\t\t// handle the event\t\r\n\t\t\t\tresult = subject ? $event.dispatch.call( subject, event, callback ) : null;\r\n\t\t\t\t// stop the drag interaction for this element\r\n\t\t\t\tif ( result === false ){\r\n\t\t\t\t\tif ( mode == \"drag\" ){\r\n\t\t\t\t\t\tia.cancelled = true;\r\n\t\t\t\t\t\tdd.propagates -= 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( type == \"drop\" ){\r\n\t\t\t\t\t\tia[ mode ][p] = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// assign any dropinit elements\r\n\t\t\t\telse if ( type == \"dropinit\" )\r\n\t\t\t\t\tia.droppable.push( drag.element( result ) || subject );\r\n\t\t\t\t// accept a returned proxy element \r\n\t\t\t\tif ( type == \"dragstart\" )\r\n\t\t\t\t\tia.proxy = $( drag.element( result ) || ia.drag )[0];\r\n\t\t\t\t// remember this result\t\r\n\t\t\t\tia.results.push( result );\r\n\t\t\t\t// forget the event result, for recycling\r\n\t\t\t\tdelete event.result;\r\n\t\t\t\t// break on cancelled handler\r\n\t\t\t\tif ( type !== \"dropinit\" )\r\n\t\t\t\t\treturn result;\r\n\t\t\t});\t\r\n\t\t\t// flatten the results\t\r\n\t\t\tdd.results[ i ] = drag.flatten( ia.results );\t\r\n\t\t\t// accept a set of valid drop targets\r\n\t\t\tif ( type == \"dropinit\" )\r\n\t\t\t\tia.droppable = drag.flatten( ia.droppable );\r\n\t\t\t// locate drop targets\r\n\t\t\tif ( type == \"dragstart\" && !ia.cancelled )\r\n\t\t\t\tcallback.update(); \r\n\t\t}\r\n\t\twhile ( ++i < len )\r\n\t\t// restore the original event & type\r\n\t\tevent.type = orig.type;\r\n\t\tevent.originalEvent = orig.event;\r\n\t\t// return all handler results\r\n\t\treturn drag.flatten( dd.results );\r\n\t},\r\n\t\t\r\n\t// extend the callback object with drag/drop properties...\r\n\tproperties: function( event, dd, ia ){\t\t\r\n\t\tvar obj = ia.callback;\r\n\t\t// elements\r\n\t\tobj.drag = ia.drag;\r\n\t\tobj.proxy = ia.proxy || ia.drag;\r\n\t\t// starting mouse position\r\n\t\tobj.startX = dd.pageX;\r\n\t\tobj.startY = dd.pageY;\r\n\t\t// current distance dragged\r\n\t\tobj.deltaX = event.pageX - dd.pageX;\r\n\t\tobj.deltaY = event.pageY - dd.pageY;\r\n\t\t// original element position\r\n\t\tobj.originalX = ia.offset.left;\r\n\t\tobj.originalY = ia.offset.top;\r\n\t\t// adjusted element position\r\n\t\tobj.offsetX = obj.originalX + obj.deltaX; \r\n\t\tobj.offsetY = obj.originalY + obj.deltaY;\r\n\t\t// assign the drop targets information\r\n\t\tobj.drop = drag.flatten( ( ia.drop || [] ).slice() );\r\n\t\tobj.available = drag.flatten( ( ia.droppable || [] ).slice() );\r\n\t\treturn obj;\t\r\n\t},\r\n\t\r\n\t// determine is the argument is an element or jquery instance\r\n\telement: function( arg ){\r\n\t\tif ( arg && ( arg.jquery || arg.nodeType == 1 ) )\r\n\t\t\treturn arg;\r\n\t},\r\n\t\r\n\t// flatten nested jquery objects and arrays into a single dimension array\r\n\tflatten: function( arr ){\r\n\t\treturn $.map( arr, function( member ){\r\n\t\t\treturn member && member.jquery ? $.makeArray( member ) : \r\n\t\t\t\tmember && member.length ? drag.flatten( member ) : member;\r\n\t\t});\r\n\t},\r\n\t\r\n\t// toggles text selection attributes ON (true) or OFF (false)\r\n\ttextselect: function( bool ){ \r\n\t\t$( document )[ bool ? \"unbind\" : \"bind\" ](\"selectstart\", drag.dontstart )\r\n\t\t\t.css(\"MozUserSelect\", bool ? \"\" : \"none\" );\r\n\t\t// .attr(\"unselectable\", bool ? \"off\" : \"on\" )\r\n\t\tdocument.unselectable = bool ? \"off\" : \"on\"; \r\n\t},\r\n\t\r\n\t// suppress \"selectstart\" and \"ondragstart\" events\r\n\tdontstart: function(){ \r\n\t\treturn false; \r\n\t},\r\n\t\r\n\t// a callback instance contructor\r\n\tcallback: function(){}\r\n\t\r\n};\r\n\r\n// callback methods\r\ndrag.callback.prototype = {\r\n\tupdate: function(){\r\n\t\tif ( $special.drop && this.available.length )\r\n\t\t\t$.each( this.available, function( i ){\r\n\t\t\t\t$special.drop.locate( this, i );\r\n\t\t\t});\r\n\t}\r\n};\r\n\r\n// patch $.event.$dispatch to allow suppressing clicks\r\nvar $dispatch = $event.dispatch;\r\n$event.dispatch = function( event ){\r\n\tif ( $.data( this, \"suppress.\"+ event.type ) - new Date().getTime() > 0 ){\r\n\t\t$.removeData( this, \"suppress.\"+ event.type );\r\n\t\treturn;\r\n\t}\r\n\treturn $dispatch.apply( this, arguments );\r\n};\r\n\r\n// event fix hooks for touch events...\r\nvar touchHooks = \r\n$event.fixHooks.touchstart = \r\n$event.fixHooks.touchmove = \r\n$event.fixHooks.touchend =\r\n$event.fixHooks.touchcancel = {\r\n\tprops: \"clientX clientY pageX pageY screenX screenY\".split( \" \" ),\r\n\tfilter: function( event, orig ) {\r\n\t\tif ( orig ){\r\n\t\t\tvar touched = ( orig.touches && orig.touches[0] )\r\n\t\t\t\t|| ( orig.changedTouches && orig.changedTouches[0] )\r\n\t\t\t\t|| null; \r\n\t\t\t// iOS webkit: touchstart, touchmove, touchend\r\n\t\t\tif ( touched ) \r\n\t\t\t\t$.each( touchHooks.props, function( i, prop ){\r\n\t\t\t\t\tevent[ prop ] = touched[ prop ];\r\n\t\t\t\t});\r\n\t\t}\r\n\t\treturn event;\r\n\t}\r\n};\r\n\r\n// share the same special event configuration with related events...\r\n$special.draginit = $special.dragstart = $special.dragend = drag;\r\n\r\n})( jQuery );","/*! \r\n * jquery.event.drag.live - v 2.2\r\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\r\n * Open Source MIT License - http://threedubmedia.com/code/license\r\n */\r\n// Created: 2010-06-07\r\n// Updated: 2012-05-21\r\n// REQUIRES: jquery 1.7.x, event.drag 2.2\r\n\r\n;(function( $ ){\r\n\t\r\n// local refs (increase compression)\r\nvar $event = $.event,\r\n// ref the special event config\r\ndrag = $event.special.drag,\r\n// old drag event add method\r\norigadd = drag.add,\r\n// old drag event teradown method\r\norigteardown = drag.teardown;\r\n\r\n// allow events to bubble for delegation\r\ndrag.noBubble = false;\r\n\r\n// the namespace for internal live events\r\ndrag.livekey = \"livedrag\";\r\n\r\n// new drop event add method\r\ndrag.add = function( obj ){ \r\n\t// call the old method\r\n\torigadd.apply( this, arguments );\r\n\t// read the data\r\n\tvar data = $.data( this, drag.datakey );\r\n\t// bind the live \"draginit\" delegator\r\n\tif ( !data.live && obj.selector ){\r\n\t\tdata.live = true;\r\n\t\t$event.add( this, \"draginit.\"+ drag.livekey, drag.delegate );\r\n\t}\r\n};\r\n\r\n// new drop event teardown method\r\ndrag.teardown = function(){ \r\n\t// call the old method\r\n\torigteardown.apply( this, arguments );\r\n\t// read the data\r\n\tvar data = $.data( this, drag.datakey ) || {};\r\n\t// bind the live \"draginit\" delegator\r\n\tif ( data.live ){\r\n\t\t// remove the \"live\" delegation\r\n\t\t$event.remove( this, \"draginit.\"+ drag.livekey, drag.delegate );\r\n\t\tdata.live = false;\r\n\t}\r\n};\r\n\r\n// identify potential delegate elements\r\ndrag.delegate = function( event ){\r\n\t// local refs\r\n\tvar elems = [], target, \r\n\t// element event structure\r\n\tevents = $.data( this, \"events\" ) || {};\r\n\t// query live events\r\n\t$.each( events || [], function( key, arr ){\r\n\t\t// no event type matches\r\n\t\tif ( key.indexOf(\"drag\") !== 0 )\r\n\t\t\treturn;\r\n\t\t$.each( arr || [], function( i, obj ){\r\n\t\t\t// locate the element to delegate\r\n\t\t\ttarget = $( event.target ).closest( obj.selector, event.currentTarget )[0];\r\n\t\t\t// no element found\r\n\t\t\tif ( !target ) \r\n\t\t\t\treturn;\r\n\t\t\t// add an event handler\r\n\t\t\t$event.add( target, obj.origType+'.'+drag.livekey, obj.origHandler || obj.handler, obj.data );\r\n\t\t\t// remember new elements\r\n\t\t\tif ( $.inArray( target, elems ) < 0 )\r\n\t\t\t\telems.push( target );\t\t\r\n\t\t});\r\n\t});\r\n\t// if there are no elements, break\r\n\tif ( !elems.length ) \r\n\t\treturn false;\r\n\t// return the matched results, and clenup when complete\t\t\r\n\treturn $( elems ).bind(\"dragend.\"+ drag.livekey, function(){\r\n\t\t$event.remove( this, \".\"+ drag.livekey ); // cleanup delegation\r\n\t});\r\n};\r\n\t\r\n})( jQuery );","/*! \n * jquery.event.drop - v 2.2\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\n * Open Source MIT License - http://threedubmedia.com/code/license\n */\n// Created: 2008-06-04 \n// Updated: 2012-05-21\n// REQUIRES: jquery 1.7.x, event.drag 2.2\n\n;(function($){ // secure $ jQuery alias\n\n// Events: drop, dropstart, dropend\n\n// add the jquery instance method\n$.fn.drop = function( str, arg, opts ){\n\t// figure out the event type\n\tvar type = typeof str == \"string\" ? str : \"\",\n\t// figure out the event handler...\n\tfn = $.isFunction( str ) ? str : $.isFunction( arg ) ? arg : null;\n\t// fix the event type\n\tif ( type.indexOf(\"drop\") !== 0 ) \n\t\ttype = \"drop\"+ type;\n\t// were options passed\n\topts = ( str == fn ? arg : opts ) || {};\n\t// trigger or bind event handler\n\treturn fn ? this.bind( type, opts, fn ) : this.trigger( type );\n};\n\n// DROP MANAGEMENT UTILITY\n// returns filtered drop target elements, caches their positions\n$.drop = function( opts ){ \n\topts = opts || {};\n\t// safely set new options...\n\tdrop.multi = opts.multi === true ? Infinity : \n\t\topts.multi === false ? 1 : !isNaN( opts.multi ) ? opts.multi : drop.multi;\n\tdrop.delay = opts.delay || drop.delay;\n\tdrop.tolerance = $.isFunction( opts.tolerance ) ? opts.tolerance : \n\t\topts.tolerance === null ? null : drop.tolerance;\n\tdrop.mode = opts.mode || drop.mode || 'intersect';\n};\n\n// local refs (increase compression)\nvar $event = $.event, \n$special = $event.special,\n// configure the drop special event\ndrop = $.event.special.drop = {\n\n\t// these are the default settings\n\tmulti: 1, // allow multiple drop winners per dragged element\n\tdelay: 20, // async timeout delay\n\tmode: 'overlap', // drop tolerance mode\n\t\t\n\t// internal cache\n\ttargets: [], \n\t\n\t// the key name for stored drop data\n\tdatakey: \"dropdata\",\n\t\t\n\t// prevent bubbling for better performance\n\tnoBubble: true,\n\t\n\t// count bound related events\n\tadd: function( obj ){ \n\t\t// read the interaction data\n\t\tvar data = $.data( this, drop.datakey );\n\t\t// count another realted event\n\t\tdata.related += 1;\n\t},\n\t\n\t// forget unbound related events\n\tremove: function(){\n\t\t$.data( this, drop.datakey ).related -= 1;\n\t},\n\t\n\t// configure the interactions\n\tsetup: function(){\n\t\t// check for related events\n\t\tif ( $.data( this, drop.datakey ) ) \n\t\t\treturn;\n\t\t// initialize the drop element data\n\t\tvar data = { \n\t\t\trelated: 0,\n\t\t\tactive: [],\n\t\t\tanyactive: 0,\n\t\t\twinner: 0,\n\t\t\tlocation: {}\n\t\t};\n\t\t// store the drop data on the element\n\t\t$.data( this, drop.datakey, data );\n\t\t// store the drop target in internal cache\n\t\tdrop.targets.push( this );\n\t},\n\t\n\t// destroy the configure interaction\t\n\tteardown: function(){ \n\t\tvar data = $.data( this, drop.datakey ) || {};\n\t\t// check for related events\n\t\tif ( data.related ) \n\t\t\treturn;\n\t\t// remove the stored data\n\t\t$.removeData( this, drop.datakey );\n\t\t// reference the targeted element\n\t\tvar element = this;\n\t\t// remove from the internal cache\n\t\tdrop.targets = $.grep( drop.targets, function( target ){ \n\t\t\treturn ( target !== element ); \n\t\t});\n\t},\n\t\n\t// shared event handler\n\thandler: function( event, dd ){ \n\t\t// local vars\n\t\tvar results, $targets;\n\t\t// make sure the right data is available\n\t\tif ( !dd ) \n\t\t\treturn;\n\t\t// handle various events\n\t\tswitch ( event.type ){\n\t\t\t// draginit, from $.event.special.drag\n\t\t\tcase 'mousedown': // DROPINIT >>\n\t\t\tcase 'touchstart': // DROPINIT >>\n\t\t\t\t// collect and assign the drop targets\n\t\t\t\t$targets =  $( drop.targets );\n\t\t\t\tif ( typeof dd.drop == \"string\" )\n\t\t\t\t\t$targets = $targets.filter( dd.drop );\n\t\t\t\t// reset drop data winner properties\n\t\t\t\t$targets.each(function(){\n\t\t\t\t\tvar data = $.data( this, drop.datakey );\n\t\t\t\t\tdata.active = [];\n\t\t\t\t\tdata.anyactive = 0;\n\t\t\t\t\tdata.winner = 0;\n\t\t\t\t});\n\t\t\t\t// set available target elements\n\t\t\t\tdd.droppable = $targets;\n\t\t\t\t// activate drop targets for the initial element being dragged\n\t\t\t\t$special.drag.hijack( event, \"dropinit\", dd ); \n\t\t\t\tbreak;\n\t\t\t// drag, from $.event.special.drag\n\t\t\tcase 'mousemove': // TOLERATE >>\n\t\t\tcase 'touchmove': // TOLERATE >>\n\t\t\t\tdrop.event = event; // store the mousemove event\n\t\t\t\tif ( !drop.timer )\n\t\t\t\t\t// monitor drop targets\n\t\t\t\t\tdrop.tolerate( dd ); \n\t\t\t\tbreak;\n\t\t\t// dragend, from $.event.special.drag\n\t\t\tcase 'mouseup': // DROP >> DROPEND >>\n\t\t\tcase 'touchend': // DROP >> DROPEND >>\n\t\t\t\tdrop.timer = clearTimeout( drop.timer ); // delete timer\t\n\t\t\t\tif ( dd.propagates ){\n\t\t\t\t\t$special.drag.hijack( event, \"drop\", dd ); \n\t\t\t\t\t$special.drag.hijack( event, \"dropend\", dd ); \n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\t\n\t\t}\n\t},\n\t\t\n\t// returns the location positions of an element\n\tlocate: function( elem, index ){ \n\t\tvar data = $.data( elem, drop.datakey ),\n\t\t$elem = $( elem ), \n\t\tposi = $elem.offset() || {}, \n\t\theight = $elem.outerHeight(), \n\t\twidth = $elem.outerWidth(),\n\t\tlocation = { \n\t\t\telem: elem, \n\t\t\twidth: width, \n\t\t\theight: height,\n\t\t\ttop: posi.top, \n\t\t\tleft: posi.left, \n\t\t\tright: posi.left + width, \n\t\t\tbottom: posi.top + height\n\t\t};\n\t\t// drag elements might not have dropdata\n\t\tif ( data ){\n\t\t\tdata.location = location;\n\t\t\tdata.index = index;\n\t\t\tdata.elem = elem;\n\t\t}\n\t\treturn location;\n\t},\n\t\n\t// test the location positions of an element against another OR an X,Y coord\n\tcontains: function( target, test ){ // target { location } contains test [x,y] or { location }\n\t\treturn ( ( test[0] || test.left ) >= target.left && ( test[0] || test.right ) <= target.right\n\t\t\t&& ( test[1] || test.top ) >= target.top && ( test[1] || test.bottom ) <= target.bottom ); \n\t},\n\t\n\t// stored tolerance modes\n\tmodes: { // fn scope: \"$.event.special.drop\" object \n\t\t// target with mouse wins, else target with most overlap wins\n\t\t'intersect': function( event, proxy, target ){\n\t\t\treturn this.contains( target, [ event.pageX, event.pageY ] ) ? // check cursor\n\t\t\t\t1e9 : this.modes.overlap.apply( this, arguments ); // check overlap\n\t\t},\n\t\t// target with most overlap wins\t\n\t\t'overlap': function( event, proxy, target ){\n\t\t\t// calculate the area of overlap...\n\t\t\treturn Math.max( 0, Math.min( target.bottom, proxy.bottom ) - Math.max( target.top, proxy.top ) )\n\t\t\t\t* Math.max( 0, Math.min( target.right, proxy.right ) - Math.max( target.left, proxy.left ) );\n\t\t},\n\t\t// proxy is completely contained within target bounds\t\n\t\t'fit': function( event, proxy, target ){\n\t\t\treturn this.contains( target, proxy ) ? 1 : 0;\n\t\t},\n\t\t// center of the proxy is contained within target bounds\t\n\t\t'middle': function( event, proxy, target ){\n\t\t\treturn this.contains( target, [ proxy.left + proxy.width * .5, proxy.top + proxy.height * .5 ] ) ? 1 : 0;\n\t\t}\n\t},\t\n\t\n\t// sort drop target cache by by winner (dsc), then index (asc)\n\tsort: function( a, b ){\n\t\treturn ( b.winner - a.winner ) || ( a.index - b.index );\n\t},\n\t\t\n\t// async, recursive tolerance execution\n\ttolerate: function( dd ){\t\t\n\t\t// declare local refs\n\t\tvar i, drp, drg, data, arr, len, elem,\n\t\t// interaction iteration variables\n\t\tx = 0, ia, end = dd.interactions.length,\n\t\t// determine the mouse coords\n\t\txy = [ drop.event.pageX, drop.event.pageY ],\n\t\t// custom or stored tolerance fn\n\t\ttolerance = drop.tolerance || drop.modes[ drop.mode ];\n\t\t// go through each passed interaction...\n\t\tdo if ( ia = dd.interactions[x] ){\n\t\t\t// check valid interaction\n\t\t\tif ( !ia )\n\t\t\t\treturn; \n\t\t\t// initialize or clear the drop data\n\t\t\tia.drop = [];\n\t\t\t// holds the drop elements\n\t\t\tarr = []; \n\t\t\tlen = ia.droppable.length;\n\t\t\t// determine the proxy location, if needed\n\t\t\tif ( tolerance )\n\t\t\t\tdrg = drop.locate( ia.proxy ); \n\t\t\t// reset the loop\n\t\t\ti = 0;\n\t\t\t// loop each stored drop target\n\t\t\tdo if ( elem = ia.droppable[i] ){ \n\t\t\t\tdata = $.data( elem, drop.datakey );\n\t\t\t\tdrp = data.location;\n\t\t\t\tif ( !drp ) continue;\n\t\t\t\t// find a winner: tolerance function is defined, call it\n\t\t\t\tdata.winner = tolerance ? tolerance.call( drop, drop.event, drg, drp ) \n\t\t\t\t\t// mouse position is always the fallback\n\t\t\t\t\t: drop.contains( drp, xy ) ? 1 : 0; \n\t\t\t\tarr.push( data );\t\n\t\t\t} while ( ++i < len ); // loop \n\t\t\t// sort the drop targets\n\t\t\tarr.sort( drop.sort );\t\t\t\n\t\t\t// reset the loop\n\t\t\ti = 0;\n\t\t\t// loop through all of the targets again\n\t\t\tdo if ( data = arr[ i ] ){\n\t\t\t\t// winners...\n\t\t\t\tif ( data.winner && ia.drop.length < drop.multi ){\n\t\t\t\t\t// new winner... dropstart\n\t\t\t\t\tif ( !data.active[x] && !data.anyactive ){\n\t\t\t\t\t\t// check to make sure that this is not prevented\n\t\t\t\t\t\tif ( $special.drag.hijack( drop.event, \"dropstart\", dd, x, data.elem )[0] !== false ){ \t\n\t\t\t\t\t\t\tdata.active[x] = 1;\n\t\t\t\t\t\t\tdata.anyactive += 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// if false, it is not a winner\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdata.winner = 0;\n\t\t\t\t\t}\n\t\t\t\t\t// if it is still a winner\n\t\t\t\t\tif ( data.winner )\n\t\t\t\t\t\tia.drop.push( data.elem );\n\t\t\t\t}\n\t\t\t\t// losers... \n\t\t\t\telse if ( data.active[x] && data.anyactive == 1 ){\n\t\t\t\t\t// former winner... dropend\n\t\t\t\t\t$special.drag.hijack( drop.event, \"dropend\", dd, x, data.elem ); \n\t\t\t\t\tdata.active[x] = 0;\n\t\t\t\t\tdata.anyactive -= 1;\n\t\t\t\t}\n\t\t\t} while ( ++i < len ); // loop \t\t\n\t\t} while ( ++x < end ) // loop\n\t\t// check if the mouse is still moving or is idle\n\t\tif ( drop.last && xy[0] == drop.last.pageX && xy[1] == drop.last.pageY ) \n\t\t\tdelete drop.timer; // idle, don't recurse\n\t\telse  // recurse\n\t\t\tdrop.timer = setTimeout(function(){ \n\t\t\t\tdrop.tolerate( dd ); \n\t\t\t}, drop.delay );\n\t\t// remember event, to compare idleness\n\t\tdrop.last = drop.event; \n\t}\n\t\n};\n\n// share the same special event configuration with related events...\n$special.dropinit = $special.dropstart = $special.dropend = drop;\n\n})(jQuery); // confine scope\t","/*! \n * jquery.event.drop.live - v 2.2\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\n * Open Source MIT License - http://threedubmedia.com/code/license\n */\n// Created: 2010-06-07\n// Updated: 2012-05-21\n// REQUIRES: jquery 1.7.x, event.drag 2.2, event.drop 2.2\n\n;(function($){ // secure $ jQuery alias\n\n// local refs (increase compression)\nvar $event = $.event,\n// ref the drop special event config\ndrop = $event.special.drop,\n// old drop event add method\norigadd = drop.add,\n// old drop event teradown method\norigteardown = drop.teardown;\n\n// allow events to bubble for delegation\ndrop.noBubble = false;\n\n// the namespace for internal live events\ndrop.livekey = \"livedrop\";\n\n// new drop event add method\ndrop.add = function( obj ){ \n\t// call the old method\n\torigadd.apply( this, arguments );\n\t// read the data\n\tvar data = $.data( this, drop.datakey );\n\t// bind the live \"dropinit\" delegator\n\tif ( !data.live && obj.selector ){\n\t\tdata.live = true;\n\t\t$event.add( this, \"dropinit.\"+ drop.livekey, drop.delegate );\n\t}\n};\n\n// new drop event teardown method\ndrop.teardown = function(){ \n\t// call the old method\n\torigteardown.apply( this, arguments );\n\t// read the data\n\tvar data = $.data( this, drop.datakey ) || {};\n\t// remove the live \"dropinit\" delegator\n\tif ( data.live ){\n\t\t// remove the \"live\" delegation\n\t\t$event.remove( this, \"dropinit\", drop.delegate );\n\t\tdata.live = false;\n\t}\n};\n\n// identify potential delegate elements\ndrop.delegate = function( event, dd ){\n\t// local refs\n\tvar elems = [], $targets, \n\t// element event structure\n\tevents = $.data( this, \"events\" ) || {};\n\t// query live events\n\t$.each( events || [], function( key, arr ){\n\t\t// no event type matches\n\t\tif ( key.indexOf(\"drop\") !== 0 )\n\t\t\treturn;\n\t\t$.each( arr, function( i, obj ){\n\t\t\t// locate the elements to delegate\n\t\t\t$targets = $( event.currentTarget ).find( obj.selector );\n\t\t\t// no element found\n\t\t\tif ( !$targets.length ) \n\t\t\t\treturn;\n\t\t\t// take each target...\n\t\t\t$targets.each(function(){\n\t\t\t\t// add an event handler\n\t\t\t\t$event.add( this, obj.origType +'.'+ drop.livekey, obj.origHandler || obj.handler, obj.data );\n\t\t\t\t// remember new elements\n\t\t\t\tif ( $.inArray( this, elems ) < 0 )\n\t\t\t\t\telems.push( this );\t\n\t\t\t});\t\n\t\t});\n\t});\n\t// may not exist when artifically triggering dropinit event\n\tif ( dd )\n\t\t// clean-up after the interaction ends\n\t\t$event.add( dd.drag, \"dragend.\"+drop.livekey, function(){\n\t\t\t$.each( elems.concat( this ), function(){\n\t\t\t\t$event.remove( this, '.'+ drop.livekey );\t\t\t\t\t\t\t\n\t\t\t});\n\t\t});\n\t//drop.delegates.push( elems );\n\treturn elems.length ? $( elems ) : false;\n};\n\n})( jQuery ); // confine scope\t"],"sourceRoot":""}